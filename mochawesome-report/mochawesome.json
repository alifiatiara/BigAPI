{
  "stats": {
    "suites": 5,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2022-11-10T12:37:25.344Z",
    "end": "2022-11-10T12:37:34.527Z",
    "duration": 9183,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "385f4ea2-bf08-4e7f-a17b-df6c66440e25",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c5d794bf-7505-453b-ad8a-92f1f405e9b8",
          "title": "CreateToken",
          "fullFile": "C:\\Users\\alifi\\OneDrive\\Documents\\StudyJam\\BigAPI\\test\\scenarios\\createtoken.test.js",
          "file": "\\test\\scenarios\\createtoken.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should successful create token when input valid data",
              "fullTitle": "CreateToken Should successful create token when input valid data",
              "timedOut": false,
              "duration": 1606,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await BigAPI.CreateToken(data.VALID_CREATE_TOKEN);\nassert.equal(response.status, 200);\nassert.containsAllKeys(response.data, [\"token\"]);\nassert.isString(response.data.token);",
              "err": {},
              "uuid": "a6388802-0e9f-4a6f-8af7-857ea78cb02d",
              "parentUUID": "c5d794bf-7505-453b-ad8a-92f1f405e9b8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a6388802-0e9f-4a6f-8af7-857ea78cb02d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1606,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        },
        {
          "uuid": "afa10924-d0a6-43f2-bda0-19822b7c480e",
          "title": "GetBookingIds",
          "fullFile": "C:\\Users\\alifi\\OneDrive\\Documents\\StudyJam\\BigAPI\\test\\scenarios\\GetBookingIds.test.js",
          "file": "\\test\\scenarios\\GetBookingIds.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should successful get booking ids when use valid token",
              "fullTitle": "GetBookingIds Should successful get booking ids when use valid token",
              "timedOut": false,
              "duration": 2282,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await BigAPI.GetBookingIds();\n\nassert.equal(response.status, 200);\nassert.containsAllKeys(response.data[0], [\"bookingid\"]);\nassert.isNumber(response.data[0].bookingid);",
              "err": {},
              "uuid": "e0fcf9d1-408a-4277-9e5c-f6418f38f37a",
              "parentUUID": "afa10924-d0a6-43f2-bda0-19822b7c480e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e0fcf9d1-408a-4277-9e5c-f6418f38f37a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2282,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        },
        {
          "uuid": "bdc0a81a-9b84-4bfd-80cc-964c5b127512",
          "title": "GetBookingIdsName",
          "fullFile": "C:\\Users\\alifi\\OneDrive\\Documents\\StudyJam\\BigAPI\\test\\scenarios\\GetBookingIds.test.js",
          "file": "\\test\\scenarios\\GetBookingIds.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should successful get booking ids when use valid firstname and lastname",
              "fullTitle": "GetBookingIdsName Should successful get booking ids when use valid firstname and lastname",
              "timedOut": false,
              "duration": 2246,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await BigAPI.GetBookingIdsName(data.USER_DATA);\n    \nassert.equal(response.status, 200);\nassert.containsAllKeys(response.data[0], [\"bookingid\"]);\nassert.isNumber(response.data[0].bookingid);",
              "err": {},
              "uuid": "5c9034e9-f251-4565-aee4-1ff9ea77bd8e",
              "parentUUID": "bdc0a81a-9b84-4bfd-80cc-964c5b127512",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5c9034e9-f251-4565-aee4-1ff9ea77bd8e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2246,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        },
        {
          "uuid": "88646c9b-aa4d-4cd0-abb8-cef849e86721",
          "title": "GetBookingIdsDate",
          "fullFile": "C:\\Users\\alifi\\OneDrive\\Documents\\StudyJam\\BigAPI\\test\\scenarios\\GetBookingIds.test.js",
          "file": "\\test\\scenarios\\GetBookingIds.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should successful get booking ids when use valid checkin and checkout",
              "fullTitle": "GetBookingIdsDate Should successful get booking ids when use valid checkin and checkout",
              "timedOut": false,
              "duration": 2156,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await BigAPI.GetBookingIdsDate(data.USER_DATA);\nassert.equal(response.status, 200);\nassert.containsAllKeys(response.data[0], [\"bookingid\"]);\nassert.isNumber(response.data[0].bookingid);",
              "err": {},
              "uuid": "00502151-1942-4bb7-bbf7-68e7ca83a241",
              "parentUUID": "88646c9b-aa4d-4cd0-abb8-cef849e86721",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "00502151-1942-4bb7-bbf7-68e7ca83a241"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2156,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        },
        {
          "uuid": "9695b5cf-fab7-4fe6-ad5e-576f46f74412",
          "title": "Healtcheck",
          "fullFile": "C:\\Users\\alifi\\OneDrive\\Documents\\StudyJam\\BigAPI\\test\\scenarios\\healthcheck.test.js",
          "file": "\\test\\scenarios\\healthcheck.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should successful get health check endpoint to confirm whether the API is up and running.",
              "fullTitle": "Healtcheck Should successful get health check endpoint to confirm whether the API is up and running.",
              "timedOut": false,
              "duration": 877,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await BigAPI.HealthCheck();\nassert.equal(response.status, 201);\nassert.equal(response.data, [\"Created\"]);\nassert.isString(response.data);",
              "err": {},
              "uuid": "802f65d9-426a-4a04-9139-73fb95d3b309",
              "parentUUID": "9695b5cf-fab7-4fe6-ad5e-576f46f74412",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "802f65d9-426a-4a04-9139-73fb95d3b309"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 877,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 180000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.1.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}